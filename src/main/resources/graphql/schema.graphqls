enum Recurrence {
  DAILY
  WEEKLY
  MONTHLY
  YEARLY
}

enum DietaryRestriction {
  VEGETARIAN
  GLUTEN_FREE
  NUT_ALLERGY
}

input MealEventInput {
  title: String!
  name: String!
  start: String!
  userId: String!
  recurrence: Recurrence
}

input UpdateMealEventInput {
  title: String
  name: String
  start: String
  userId: String
  recurrence: Recurrence
}

type MealEvent {
  id: String!
  title: String!
  name: String!
  start: String!
  userId: String!
  recurrence: Recurrence
}

type RecipeBrief {
  id: ID!
  title: String!
  image: String!
  readyInMinutes: Int
}

type RecipeFull {
  id: ID!
  title: String!
  image: String!
  readyInMinutes: Int
  servings: Int
  summary: String
  sourceUrl: String
  extendedIngredients: [String!]!
}

type Query {
  getMealEventById(id: String!): MealEvent
  getMealEventsByUserId(userId: String!): [MealEvent]
  getRecipe(id: ID!): RecipeFull
  searchRecipes(
    query: String!
    restrictions: [DietaryRestriction!]
    number: Int = 10
  ): [RecipeBrief!]!
}

type Mutation {
  createMealEvent(input: MealEventInput!): MealEvent
  updateMealEvent(id: String!, input: UpdateMealEventInput!): MealEvent
  deleteMealEvent(id: String!): String
  generateAiMealSuggestion(
    prompt: String!
    restrictions: [DietaryRestriction!]!
  ): String
}
